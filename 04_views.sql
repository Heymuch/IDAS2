CREATE OR REPLACE VIEW VW_USERS_STATUS AS
SELECT *
FROM USERS_STATUS;

CREATE OR REPLACE VIEW VW_USERS AS
SELECT USERS.USER_ID,
       USERNAME,
       FIRST_NAME,
       MIDDLE_NAME,
       LAST_NAME,
       EMAIL,
       PROFILE_IMAGE     PROFILE_IMAGE_ID,
       FILES.FILE_DATA   PROFILE_IMAGE_DATA,
       USERS.STATUS_ID,
       USERS_STATUS.NAME STATUS_NAME,
       ADMIN
FROM USERS
         JOIN USERS_STATUS ON USERS.STATUS_ID = USERS_STATUS.STATUS_ID
         LEFT JOIN FILES ON USERS.PROFILE_IMAGE = FILES.FILE_ID;

CREATE OR REPLACE VIEW VW_STUDENTS AS
SELECT STUDENT_ID,
       STUDENTS.USER_ID,
       LAST_NAME || ', ' || FIRST_NAME || (CASE WHEN MIDDLE_NAME IS NOT NULL THEN ' ' || MIDDLE_NAME END) NAME,
       EMAIL,
       YEAR,
       STATUS_ID,
       STATUS_NAME
FROM STUDENTS
         JOIN VW_USERS ON VW_USERS.USER_ID = STUDENTS.USER_ID;

CREATE OR REPLACE VIEW VW_FILES AS
SELECT FILE_ID, FILES.USER_ID USER_ID, USERS.USERNAME USER_USERNAME, FIRST_NAME, FILE_TYPE, FILE_DATA, CREATED
FROM FILES
         JOIN USERS ON FILES.USER_ID = USERS.USER_ID;

CREATE OR REPLACE VIEW VW_TEACHERS AS
SELECT TEACHER_ID,
       TEACHERS.USER_ID,
       LAST_NAME || ', ' || FIRST_NAME || (CASE WHEN MIDDLE_NAME IS NOT NULL THEN ' ' || MIDDLE_NAME END) NAME,
       EMAIL,
       STATUS_ID,
       STATUS_NAME
FROM TEACHERS
         JOIN VW_USERS ON TEACHERS.USER_ID = VW_USERS.USER_ID;

CREATE OR REPLACE VIEW VW_CLASSROOMS AS
SELECT *
FROM CLASSROOMS;

CREATE OR REPLACE VIEW VW_COURSES AS
SELECT *
FROM COURSES;

CREATE OR REPLACE VIEW VW_GRADES AS
SELECT GRADE_ID,
       GRADES.STUDENT_ID,
       VW_STUDENTS.NAME      STUDENT_NAME,
       GRADES.TEACHER_ID,
       VW_TEACHERS.NAME      TEACHER_NAME,
       GRADES.COURSE_ID,
       VW_COURSES.SHORT_NAME COURSE_SHORT_NAME,
       VW_COURSES.FULL_NAME  COURSE_FULL_NAME,
       VALUE                 GRADE_VALUE,
       GRADES.DESCRIPTION    GRADE_DESCRIPTION,
       CREATED               GRADE_CREATED
FROM GRADES
         JOIN VW_STUDENTS ON GRADES.STUDENT_ID = VW_STUDENTS.STUDENT_ID
         JOIN VW_TEACHERS ON GRADES.TEACHER_ID = VW_TEACHERS.TEACHER_ID
         JOIN VW_COURSES ON GRADES.COURSE_ID = VW_COURSES.COURSE_ID;

CREATE OR REPLACE VIEW VW_GROUPS AS
SELECT GROUP_ID,
       GROUPS.TEACHER_ID,
       VW_TEACHERS.NAME                 TEACHER_NAME,
       GROUPS.NAME                      GROUP_NAME,
       MAX_CAPACITY,
       ACTUAL_CAPACITY,
       (MAX_CAPACITY - ACTUAL_CAPACITY) FREE_CAPACITY
FROM GROUPS
         JOIN VW_TEACHERS ON GROUPS.TEACHER_ID = VW_TEACHERS.TEACHER_ID;

CREATE OR REPLACE VIEW VW_GROUPS_COURSES AS
SELECT CG.GROUP_ID,
       VW_GROUPS.GROUP_NAME,
       VW_GROUPS.MAX_CAPACITY,
       VW_GROUPS.ACTUAL_CAPACITY,
       VW_GROUPS.FREE_CAPACITY,
       VW_GROUPS.TEACHER_ID,
       VW_GROUPS.TEACHER_NAME,
       CG.COURSE_ID,
       VW_COURSES.FULL_NAME   COURSE_FULL_NAME,
       VW_COURSES.SHORT_NAME  COURSE_SHORT_NAME,
       VW_COURSES.DESCRIPTION COURSE_DESCRIPTION
FROM COURSES_GROUPS CG
         JOIN VW_GROUPS ON CG.GROUP_ID = VW_GROUPS.GROUP_ID
         JOIN VW_COURSES ON CG.COURSE_ID = VW_COURSES.COURSE_ID;

CREATE OR REPLACE VIEW VW_STUDENTS_GROUPS AS
SELECT SG.STUDENT_ID, VW_STUDENTS.NAME STUDENT_NAME, VW_STUDENTS.EMAIL STUDENT_EMAIL, SG.GROUP_ID, VW_GROUPS.GROUP_NAME
FROM STUDENTS_GROUPS SG
         JOIN VW_STUDENTS ON SG.STUDENT_ID = VW_STUDENTS.STUDENT_ID
         JOIN VW_GROUPS ON SG.GROUP_ID = VW_GROUPS.GROUP_ID;

